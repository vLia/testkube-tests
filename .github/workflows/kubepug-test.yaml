name: kubepug
on:
  push

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      # Get code and short git hash
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      # Set up gcloud
      - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}
      - run: |-
          gcloud --quiet auth configure-docker

      # Connect to GKE cluster
      - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER_NAME_DEV }}
          location: ${{ secrets.GKE_ZONE_DEV }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      # Set up Testkube
      - name: Install Testkube CLI
        run: |-
          bash < <(curl -sSLf https://kubeshop.github.io/testkube/install.sh )

      # Run with file
      - name: Run with local file
        run: |
          kubectl testkube create test --file example-manifest.yaml --type kubepug/yaml --name kubepug-file-${{ steps.vars.outputs.sha_short }}
          kubectl testkube run test kubepug-file-${{ steps.vars.outputs.sha_short }}

      # Run with kubectl get
      - name: Run with invalid ingress
        run: |
          kubectl get PodSecurityPolicy gce.gke-metrics-agent -o yaml | kubectl testkube create test --type kubepug/yaml --name kubepug-dynamic-${{ steps.vars.outputs.sha_short }}
          kubectl testkube run test kubepug-dynamic-${{ steps.vars.outputs.sha_short }}
